name: Release Build
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to upload artifacts to'
        required: true
        type: string
permissions:
  contents: write
jobs:
  build-linux:
    name: Build Linux + Windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@786fff0690178f1234e4e1fe9b536e94f5433196 # v20
      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@565684385bcd71bad329742eefe8d12f2e765b39 # v13
      - name: Build release bundle
        run: nix build .#release --print-build-logs
      - name: List built artifacts
        run: |
          echo "Built artifacts:"
          ls -lh result/bin/
          echo ""
          echo "Checksums:"
          cat result/bin/sha256.txt
      - name: Upload artifacts to workspace
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: linux-artifacts
          path: result/bin/*
          if-no-files-found: error
          retention-days: 7
      - name: Get release tag
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          fi
      - name: Upload binaries to release
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ steps.get_tag.outputs.tag }}
        run: |
          echo "Uploading artifacts to release ${RELEASE_TAG}"
          cd result/bin
          for file in *; do
            if [ -f "$file" ]; then
              echo "Uploading: $file"
              gh release upload "${RELEASE_TAG}" "$file" --clobber
            fi
          done
  build-macos:
    name: Build macOS (ARM64 only)
    runs-on: macos-latest # macos-latest is ARM64 (macos-14)
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@786fff0690178f1234e4e1fe9b536e94f5433196 # v20
      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@565684385bcd71bad329742eefe8d12f2e765b39 # v13
      - name: Build release bundle
        run: nix build .#release --print-build-logs
      - name: List built artifacts
        run: |
          echo "Built artifacts:"
          ls -lh result/bin/
          echo ""
          echo "Checksums:"
          cat result/bin/sha256.txt
      - name: Upload artifacts to workspace
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: macos-artifacts
          path: result/bin/*
          if-no-files-found: error
          retention-days: 7
      - name: Get release tag
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          fi
      - name: Upload binaries to release
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ steps.get_tag.outputs.tag }}
        run: |
          echo "Uploading artifacts to release ${RELEASE_TAG}"
          cd result/bin
          for file in *; do
            if [ -f "$file" ]; then
              echo "Uploading: $file"
              gh release upload "${RELEASE_TAG}" "$file" --clobber
            fi
          done
  verify-release:
    name: Verify Release Artifacts
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Download Linux artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: linux-artifacts
          path: artifacts/linux
      - name: Download macOS artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: macos-artifacts
          path: artifacts/macos
      - name: Verify all expected binaries exist
        run: |
          echo "Expected binaries:"
          echo "  - cargo-fslabscli-x86_64-unknown-linux-musl"
          echo "  - cargo-fslabscli-aarch64-unknown-linux-musl"
          echo "  - cargo-fslabscli-x86_64-pc-windows-gnu.exe"
          echo "  - cargo-fslabscli-aarch64-apple-darwin"
          echo ""
          echo "Note: x86_64-darwin not supported (Intel Macs can use Rosetta 2)"
          echo ""
          echo "Linux artifacts:"
          ls -1 artifacts/linux/
          echo ""
          echo "macOS artifacts:"
          ls -1 artifacts/macos/
          echo ""

          # Check for expected files
          expected_files=(
            "artifacts/linux/cargo-fslabscli-x86_64-unknown-linux-musl"
            "artifacts/linux/cargo-fslabscli-aarch64-unknown-linux-musl"
            "artifacts/linux/cargo-fslabscli-x86_64-pc-windows-gnu.exe"
            "artifacts/macos/cargo-fslabscli-aarch64-apple-darwin"
          )

          missing=0
          for file in "${expected_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing: $file"
              missing=1
            else
              echo "✅ Found: $file"
            fi
          done

          if [ $missing -eq 1 ]; then
            echo ""
            echo "⚠️  Some expected binaries are missing!"
            exit 1
          fi

          echo ""
          echo "✅ All expected binaries found!"
      - name: Verify checksums
        run: |
          cd artifacts/linux
          if [ -f sha256.txt ]; then
            echo "Verifying Linux checksums..."
            sha256sum -c sha256.txt
          fi

          cd ../macos
          if [ -f sha256.txt ]; then
            echo "Verifying macOS checksums..."
            sha256sum -c sha256.txt
          fi
